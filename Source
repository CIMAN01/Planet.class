/** Planet Class example originally from "The Java Tutorial: A Short Course on the Basics 5th Edition".
 *  Code modified by CIMAN allowing source code to be run within an IDE (i.e. IntelliJ)
 *  instead of the command line as originally implemented by author.
 */

import java.io.*;
import java.util.*;

public enum Planet {
    MERCURY (3.303e+23, 2.4397e6),
    VENUS   (4.869e+24, 6.0518e6),
    EARTH   (5.976e+24, 6.37814e6),
    MARS    (6.421e+23, 3.3972e6),
    JUPITER (1.9e+27,   7.1492e7),
    SATURN  (5.688e+26, 6.0268e7),
    URANUS  (8.686e+25, 2.5559e7),
    NEPTUNE (1.024e+26, 2.4746e7);

    private final double mass;   // in kilograms
    private final double radius; // in meters

    Planet(double mass, double radius) {
        this.mass = mass;
        this.radius = radius;
    }

    private double mass() { return mass; }
    private double radius() { return radius; }

    // universal gravitational constant  (m3 kg-1 s-2)
    public static final double G = 6.67300E-11;

    double surfaceGravity() {
        return G * mass / (radius * radius);
    }
    double surfaceWeight(double otherMass) {
        return otherMass * surfaceGravity();
    }
    public static void main(String[] args) {

        // Modified code starts here
        System.out.print("Enter your weight in kg: ");

        // try-with-resources block
        try (Scanner scanner = new Scanner(System.in)) {
                double earthWeight = scanner.nextDouble();
                double mass = earthWeight / EARTH.surfaceGravity();
                for (Planet p : Planet.values()) {
                    System.out.printf("Your weight on %s is %f%n", p, p.surfaceWeight(mass));
                }
        // catches an exception if wrong input is given (such as a string literal.)
        } catch (InputMismatchException exc) {
                System.out.println("Not a valid number. Try again");
        }

    }
}
